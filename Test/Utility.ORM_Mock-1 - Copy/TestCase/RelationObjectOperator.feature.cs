// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TOHU.Toolbox.Utility.ORM_Mock.TestCase
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("RelationObjectOperator")]
    public partial class RelationObjectOperatorFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "RelationObjectOperator.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "RelationObjectOperator", "提供關連資料物件操作。", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("取得指定的關連資料物件")]
        [NUnit.Framework.CategoryAttribute("RelationObjectOperator")]
        public virtual void 取得指定的關連資料物件()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("取得指定的關連資料物件", new string[] {
                        "RelationObjectOperator"});
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.When("要求取得欄位 ID 為 3752 的 CustomObject 關連資料物件", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Initial",
                        "Name"});
            table1.AddRow(new string[] {
                        "3752",
                        "TOHU"});
#line 7
 testRunner.Then("取得 CustomObject 資料物件", ((string)(null)), table1, "Then ");
#line 10
  testRunner.And("得到執行語法 SELECT * FROM Custom WHERE [ID] = @ID_1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table2.AddRow(new string[] {
                        "@ID_1",
                        "3752"});
#line 11
  testRunner.And("得到查詢參數集合包含", ((string)(null)), table2, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("新增指定的關連資料物件")]
        [NUnit.Framework.CategoryAttribute("RelationObjectOperator")]
        public virtual void 新增指定的關連資料物件()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("新增指定的關連資料物件", new string[] {
                        "RelationObjectOperator"});
#line 16
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Initial",
                        "Name"});
            table3.AddRow(new string[] {
                        "0005",
                        "CEHS"});
            table3.AddRow(new string[] {
                        "0006",
                        "RICH"});
#line 17
 testRunner.Given("關連資料物件集合", ((string)(null)), table3, "Given ");
#line 21
 testRunner.When("要求新增關連資料物件", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
 testRunner.Then("得到執行語法 INSERT INTO [Custom] ( [ID], [Name] ) VALUES ( @ID, @Name )", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table4.AddRow(new string[] {
                        "@ID",
                        "0005"});
            table4.AddRow(new string[] {
                        "@Name",
                        "CEHS"});
#line 23
  testRunner.And("得到參數集合包含", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table5.AddRow(new string[] {
                        "@ID",
                        "0006"});
            table5.AddRow(new string[] {
                        "@Name",
                        "RICH"});
#line 27
  testRunner.And("得到參數集合包含", ((string)(null)), table5, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("刪除指定的關連資料物件")]
        [NUnit.Framework.CategoryAttribute("RelationObjectOperator")]
        public virtual void 刪除指定的關連資料物件()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("刪除指定的關連資料物件", new string[] {
                        "RelationObjectOperator"});
#line 33
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Initial",
                        "Name"});
            table6.AddRow(new string[] {
                        "3752",
                        "TOHU"});
            table6.AddRow(new string[] {
                        "0001",
                        "ALL"});
            table6.AddRow(new string[] {
                        "0002",
                        "MTEC"});
#line 34
 testRunner.Given("關連資料物件集合", ((string)(null)), table6, "Given ");
#line 39
  testRunner.And("條件為欄位 Initial", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.When("要求刪除關連資料物件", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 41
 testRunner.Then("得到執行語法 DELETE FROM [Custom] WHERE [ID] = @ID_1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table7.AddRow(new string[] {
                        "@ID_1",
                        "3752"});
#line 42
  testRunner.And("得到參數集合包含", ((string)(null)), table7, "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table8.AddRow(new string[] {
                        "@ID_1",
                        "0001"});
#line 45
  testRunner.And("得到參數集合包含", ((string)(null)), table8, "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table9.AddRow(new string[] {
                        "@ID_1",
                        "0002"});
#line 48
  testRunner.And("得到參數集合包含", ((string)(null)), table9, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("更新指定的關連資料物件")]
        [NUnit.Framework.CategoryAttribute("RelationObjectOperator")]
        public virtual void 更新指定的關連資料物件()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("更新指定的關連資料物件", new string[] {
                        "RelationObjectOperator"});
#line 53
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Initial",
                        "Name"});
            table10.AddRow(new string[] {
                        "0002",
                        "TOHU"});
            table10.AddRow(new string[] {
                        "0003",
                        "ALL"});
#line 54
 testRunner.Given("關連資料物件集合", ((string)(null)), table10, "Given ");
#line 58
  testRunner.And("條件為欄位 Initial", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
  testRunner.And("更新欄位 Name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.When("要求更新關連資料物件", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 61
 testRunner.Then("得到執行語法 UPDATE [Custom] SET [Name] = @Name_U1 WHERE [ID] = @ID_1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table11.AddRow(new string[] {
                        "@ID_1",
                        "0002"});
            table11.AddRow(new string[] {
                        "@Name_U1",
                        "TOHU"});
#line 62
  testRunner.And("得到參數集合包含", ((string)(null)), table11, "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table12.AddRow(new string[] {
                        "@ID_1",
                        "0003"});
            table12.AddRow(new string[] {
                        "@Name_U1",
                        "ALL"});
#line 66
  testRunner.And("得到參數集合包含", ((string)(null)), table12, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("更新欄位與條件欄位相同")]
        [NUnit.Framework.CategoryAttribute("RelationObjectOperator")]
        public virtual void 更新欄位與條件欄位相同()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("更新欄位與條件欄位相同", new string[] {
                        "RelationObjectOperator"});
#line 72
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Initial",
                        "Name"});
            table13.AddRow(new string[] {
                        "0002",
                        "TOHU"});
#line 73
 testRunner.Given("建立關連資料物件集合項目", ((string)(null)), table13, "Given ");
#line 76
  testRunner.And("條件為欄位 Initial", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
  testRunner.And("更新 ID 欄位為 1000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
 testRunner.When("要求更新關連資料物件", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 79
 testRunner.Then("得到執行語法 UPDATE [Custom] SET [ID] = @ID_U1 WHERE [ID] = @ID_1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table14.AddRow(new string[] {
                        "@ID_U1",
                        "1000"});
            table14.AddRow(new string[] {
                        "@ID_1",
                        "0002"});
#line 80
  testRunner.And("得到參數集合包含", ((string)(null)), table14, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("無條件式更新指定的關連資料物件")]
        [NUnit.Framework.CategoryAttribute("RelationObjectOperator")]
        public virtual void 無條件式更新指定的關連資料物件()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("無條件式更新指定的關連資料物件", new string[] {
                        "RelationObjectOperator"});
#line 86
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Initial",
                        "Name"});
            table15.AddRow(new string[] {
                        "3752",
                        "TOHU"});
            table15.AddRow(new string[] {
                        "0001",
                        "ALL"});
#line 87
 testRunner.Given("關連資料物件集合", ((string)(null)), table15, "Given ");
#line 91
  testRunner.And("更新欄位 Name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
 testRunner.When("要求更新關連資料物件", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 93
 testRunner.Then("得到執行語法 UPDATE [Custom] SET [Name] = @Name_U1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table16.AddRow(new string[] {
                        "@Name_U1",
                        "TOHU"});
#line 94
  testRunner.And("得到參數集合包含", ((string)(null)), table16, "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table17.AddRow(new string[] {
                        "@Name_U1",
                        "ALL"});
#line 97
  testRunner.And("得到參數集合包含", ((string)(null)), table17, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("無條件式取得指定的關連資料物件")]
        [NUnit.Framework.CategoryAttribute("RelationObjectOperator")]
        public virtual void 無條件式取得指定的關連資料物件()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("無條件式取得指定的關連資料物件", new string[] {
                        "RelationObjectOperator"});
#line 102
this.ScenarioSetup(scenarioInfo);
#line 103
 testRunner.When("要求取得 Custom 關連資料物件", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Initial",
                        "Name"});
            table18.AddRow(new string[] {
                        "3752",
                        "TOHU"});
            table18.AddRow(new string[] {
                        "0001",
                        "ALL"});
            table18.AddRow(new string[] {
                        "0002",
                        "MTEC"});
            table18.AddRow(new string[] {
                        "0003",
                        "ETSH"});
#line 104
 testRunner.Then("取得 CustomObject 資料物件", ((string)(null)), table18, "Then ");
#line 110
  testRunner.And("得到執行語法 SELECT * FROM Custom", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("無條件刪除指定的關連資料物件")]
        [NUnit.Framework.CategoryAttribute("RelationObjectOperator")]
        public virtual void 無條件刪除指定的關連資料物件()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("無條件刪除指定的關連資料物件", new string[] {
                        "RelationObjectOperator"});
#line 113
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Initial",
                        "Name"});
            table19.AddRow(new string[] {
                        "3752",
                        "TOHU"});
            table19.AddRow(new string[] {
                        "0001",
                        "ALL"});
#line 114
 testRunner.Given("關連資料物件集合", ((string)(null)), table19, "Given ");
#line 118
 testRunner.When("要求刪除關連資料物件", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 119
 testRunner.Then("得到執行語法 DELETE FROM [Custom]", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
