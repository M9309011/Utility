// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TOHU.Toolbox.Utility_UT.Utility.ORM.進階查詢
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class 條件式查詢取得資料物件Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "條件式查詢取得資料物件.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "條件式查詢取得資料物件", "\t為減少物件生成數量，提供查詢的條件，避免來源資料表數量龐大，而所需要的僅其中少數記錄。", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "條件式查詢取得資料物件")))
            {
                TOHU.Toolbox.Utility_UT.Utility.ORM.進階查詢.條件式查詢取得資料物件Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 5
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Name",
                        "Extenstion"});
            table1.AddRow(new string[] {
                        "0001",
                        "ALL",
                        "111"});
            table1.AddRow(new string[] {
                        "0002",
                        "MTEC",
                        "111"});
            table1.AddRow(new string[] {
                        "0003",
                        "ETSH",
                        "333"});
            table1.AddRow(new string[] {
                        "3752",
                        "TOHU",
                        "444"});
#line 17
 testRunner.Given("具備 Custom 資料表內容的資料庫", ((string)(null)), table1, "Given ");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("透過字串指定查詢 ID 欄位的值為 0001 的關連資料物件")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "條件式查詢取得資料物件")]
        public virtual void 透過字串指定查詢ID欄位的值為0001的關連資料物件()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("透過字串指定查詢 ID 欄位的值為 0001 的關連資料物件", ((string[])(null)));
#line 24
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 25
 testRunner.Given("查詢條件為 ID 欄位的值為 0001 時", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 26
 testRunner.When("要求取得符合查詢條件的 CustomObject 關連資料物件清單時", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Initial",
                        "Name",
                        "Extenstion",
                        "Email"});
            table2.AddRow(new string[] {
                        "0001",
                        "ALL",
                        "111",
                        ""});
#line 27
 testRunner.Then("取得 CustomObject 資料物件", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("透過屬性指定查詢 Extenstion 屬性的值為 111 的關連資料物件")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "條件式查詢取得資料物件")]
        public virtual void 透過屬性指定查詢Extenstion屬性的值為111的關連資料物件()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("透過屬性指定查詢 Extenstion 屬性的值為 111 的關連資料物件", ((string[])(null)));
#line 32
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Initial",
                        "Name",
                        "Extenstion",
                        "Email"});
            table3.AddRow(new string[] {
                        "0001",
                        "ALL",
                        "111",
                        ""});
#line 33
 testRunner.Given("條件資料物件", ((string)(null)), table3, "Given ");
#line 36
  testRunner.And("查詢屬性為 Extenstion 時", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
 testRunner.When("要求取得符合屬性查詢條件的 CustomObject 關連資料物件清單時", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Initial",
                        "Name",
                        "Extenstion",
                        "Email"});
            table4.AddRow(new string[] {
                        "0001",
                        "ALL",
                        "111",
                        ""});
            table4.AddRow(new string[] {
                        "0002",
                        "MTEC",
                        "111",
                        ""});
#line 38
 testRunner.Then("取得 CustomObject 資料物件", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
