// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TOHU.Toolbox.Utility_UT.Utility.ORM
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class 關連物件的查詢新增刪除及更新功能Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "關連物件的查詢、新增、刪除及更新功能.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "關連物件的查詢、新增、刪除及更新功能", @"提供關連資料物件操作。

◆ 關連資料物件強制性標注，如果沒有標注會造成部分操作失敗。
	
	◇ TOHU.Toolbox.Utility.ORM.TableNameAttribute：在類別標示以提供對應的資料表名稱，未標示則所有操作都會失敗。

	◇ TOHU.Toolbox.Utility.ORM.PrimaryIndexAttribute：在屬性標示以指定索引欄位，未標示則會造成刪除及更新失敗。


◆ 關連資料物件選擇性標注：

	◇ TOHU.Toolbox.Utility.ORM.MappingFieldAttribute：提供對應的欄位名稱，用於屬性名稱與欄位名稱相異的情形。

	◇ TOHU.Toolbox.Utility.ORM.SkipInsertAttribute：忽略該屬性在插入及更新時使用，用於該欄位由資料表決定情形，例如：自動編號的欄位。", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "關連物件的查詢、新增、刪除及更新功能")))
            {
                TOHU.Toolbox.Utility_UT.Utility.ORM.關連物件的查詢新增刪除及更新功能Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 18
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Name",
                        "Extenstion"});
            table1.AddRow(new string[] {
                        "0001",
                        "ALL",
                        "111"});
            table1.AddRow(new string[] {
                        "0002",
                        "MTEC",
                        "222"});
            table1.AddRow(new string[] {
                        "0003",
                        "ETSH",
                        "333"});
            table1.AddRow(new string[] {
                        "3752",
                        "TOHU",
                        "444"});
#line 30
 testRunner.Given("具備 Custom 資料表內容的資料庫", ((string)(null)), table1, "Given ");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("查詢指定的關連資料物件")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "關連物件的查詢、新增、刪除及更新功能")]
        public virtual void 查詢指定的關連資料物件()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("查詢指定的關連資料物件", ((string[])(null)));
#line 37
this.ScenarioSetup(scenarioInfo);
#line 18
this.FeatureBackground();
#line 38
 testRunner.When("要求取得 CustomObject 關連資料物件清單時", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Initial",
                        "Name",
                        "Extenstion",
                        "Email"});
            table2.AddRow(new string[] {
                        "0001",
                        "ALL",
                        "111",
                        ""});
            table2.AddRow(new string[] {
                        "0002",
                        "MTEC",
                        "222",
                        ""});
            table2.AddRow(new string[] {
                        "0003",
                        "ETSH",
                        "333",
                        ""});
            table2.AddRow(new string[] {
                        "3752",
                        "TOHU",
                        "444",
                        ""});
#line 39
 testRunner.Then("取得 CustomObject 資料物件", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("新增指定的關連資料物件")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "關連物件的查詢、新增、刪除及更新功能")]
        public virtual void 新增指定的關連資料物件()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("新增指定的關連資料物件", ((string[])(null)));
#line 46
this.ScenarioSetup(scenarioInfo);
#line 18
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Initial",
                        "Name",
                        "Extenstion",
                        "Email"});
            table3.AddRow(new string[] {
                        "0005",
                        "CEHS",
                        "555",
                        "CEHS@gmail.com"});
            table3.AddRow(new string[] {
                        "0006",
                        "RICU",
                        "666",
                        "RICU@gmail.com"});
#line 47
 testRunner.When("要求新增 CustomObject 關連資料物件", ((string)(null)), table3, "When ");
#line 51
  testRunner.And("要求取得 CustomObject 關連資料物件清單時", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Initial",
                        "Name",
                        "Extenstion",
                        "Email"});
            table4.AddRow(new string[] {
                        "0001",
                        "ALL",
                        "111",
                        ""});
            table4.AddRow(new string[] {
                        "0002",
                        "MTEC",
                        "222",
                        ""});
            table4.AddRow(new string[] {
                        "0003",
                        "ETSH",
                        "333",
                        ""});
            table4.AddRow(new string[] {
                        "3752",
                        "TOHU",
                        "444",
                        ""});
            table4.AddRow(new string[] {
                        "0005",
                        "CEHS",
                        "555",
                        ""});
            table4.AddRow(new string[] {
                        "0006",
                        "RICU",
                        "666",
                        ""});
#line 52
 testRunner.Then("取得 CustomObject 資料物件", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("刪除指定的關連資料物件")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "關連物件的查詢、新增、刪除及更新功能")]
        public virtual void 刪除指定的關連資料物件()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("刪除指定的關連資料物件", ((string[])(null)));
#line 61
this.ScenarioSetup(scenarioInfo);
#line 18
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Initial",
                        "Name",
                        "Extenstion",
                        "Email"});
            table5.AddRow(new string[] {
                        "0001",
                        "ALL",
                        "111",
                        "ALL@gmail.com"});
            table5.AddRow(new string[] {
                        "0002",
                        "MTEC",
                        "222",
                        "MTEC@gmail.com"});
#line 62
 testRunner.When("要求刪除關連資料物件", ((string)(null)), table5, "When ");
#line 66
  testRunner.And("要求取得 CustomObject 關連資料物件清單時", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Initial",
                        "Name",
                        "Extenstion",
                        "Email"});
            table6.AddRow(new string[] {
                        "0003",
                        "ETSH",
                        "333",
                        ""});
            table6.AddRow(new string[] {
                        "3752",
                        "TOHU",
                        "444",
                        ""});
#line 67
 testRunner.Then("取得 CustomObject 資料物件", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("更新指定的關連資料物件")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "關連物件的查詢、新增、刪除及更新功能")]
        public virtual void 更新指定的關連資料物件()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("更新指定的關連資料物件", ((string[])(null)));
#line 72
this.ScenarioSetup(scenarioInfo);
#line 18
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Initial",
                        "Name",
                        "Extenstion",
                        "Email"});
            table7.AddRow(new string[] {
                        "0001",
                        "ALL",
                        "555",
                        "ALL@gmail.com"});
            table7.AddRow(new string[] {
                        "0002",
                        "MTEC",
                        "666",
                        "MTEC@gmail.com"});
#line 73
 testRunner.When("要求更新關連資料物件", ((string)(null)), table7, "When ");
#line 77
  testRunner.And("要求取得 CustomObject 關連資料物件清單時", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Initial",
                        "Name",
                        "Extenstion",
                        "Email"});
            table8.AddRow(new string[] {
                        "0001",
                        "ALL",
                        "555",
                        ""});
            table8.AddRow(new string[] {
                        "0002",
                        "MTEC",
                        "666",
                        ""});
            table8.AddRow(new string[] {
                        "0003",
                        "ETSH",
                        "333",
                        ""});
            table8.AddRow(new string[] {
                        "3752",
                        "TOHU",
                        "444",
                        ""});
#line 78
 testRunner.Then("取得 CustomObject 資料物件", ((string)(null)), table8, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
